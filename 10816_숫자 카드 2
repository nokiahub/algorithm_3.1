#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

int upperBound(int x, vector <int> &v, int left, int right){
    int ans = -1;
    while(left <= right){
        int mid = (left+right)/2;
        if(v[mid]==x){
            ans = mid;
            left = mid+1;
        }else if(v[mid]<x){
            left = mid + 1;
        }else{
            right = mid - 1;
        }
    }
    return ans;
}
int lowerBound(int x, vector <int> &v, int left, int right){
    int ans = -1;
    while(left <= right){
    
        int mid = (left+right)/2;
        if(v[mid]==x){
            ans = mid;
            right = mid -1;
        }else if(v[mid]<x){
            left = mid + 1;
        }else{
            right = mid - 1;
        }
    }
    return ans;
}
int main(int argc, const char * argv[]) {
    int n, m;
    cin >> n;
    vector <int> a(n);
    for(int i = 0 ; i<n ; i++){
        cin >> a[i];
    }
    cin >> m;
    vector <int> b(m);
    vector <int> c(m);
    for(int i = 0 ; i<m ; i++){
        cin >> b[i];
    }
    sort(a.begin(), a.end());
    
    for(int i=0 ;i<b.size(); i++){
        
        int lb = lowerBound(b[i], a, 0, n-1);
        int ub = upperBound(b[i], a, 0, n-1);
        if(lb==-1) c[i] = 0;
        else c[i] = ub-lb+1;
    }
    for(int i=0 ;i<c.size(); i++){
        cout << c[i] << ' ';
    }
    return 0;
}
